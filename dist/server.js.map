{"version":3,"sources":["../server/server.js"],"names":["install","app","use","static","json","db","enable","get","req","res","console","log","method","url","headers","filter","query","status","effort_lte","effort_gte","effort","$lte","parseInt","$gte","_summary","undefined","offset","_offset","limit","_limit","cursor","collection","find","sort","_id","skip","totalCount","count","then","result","toArray","issues","length","metadata","records","catch","error","message","aggregate","$match","$group","owner","$sum","results","stats","forEach","post","newIssue","body","created","Date","err","validateIssue","insertOne","cleanupIssue","insertedId","next","title","issueId","params","id","issue","put","update","convertIssue","savedIssue","delete","deleteOne","deleteResult","n","sendFile","resolve","connect","connection","listen"],"mappings":"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","file":"server.js","sourcesContent":["import 'babel-polyfill';\r\n\r\nimport SourceMapSupport from 'source-map-support';\r\n\r\nimport express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport { MongoClient, ObjectId } from 'mongodb';\r\nimport path from 'path';\r\n\r\nimport Issue from './issue.js';\r\n\r\nSourceMapSupport.install();\r\nconst app = express();\r\n/* Initialises express to use static middleware in the site */\r\napp.use(express.static('static'));\r\n/* enable body parsing */\r\napp.use(bodyParser.json());\r\n\r\n// define db in global scope.\r\nlet db;\r\n\r\n/* enable strong etags */\r\napp.enable('etag');\r\n\r\napp.get('/api/issues', (req, res) => {\r\n  console.log(req.method + ' (Updated): ' + req.url + ', ' + req.headers['user-agent']);\r\n  \r\n  const filter = {};\r\n  if (req.query.status) filter.status = req.query.status;\r\n  if (req.query.effort_lte || req.query.effort_gte) filter.effort = {};\r\n  if (req.query.effort_lte) filter.effort.$lte = parseInt(req.query.effort_lte, 10);\r\n  if (req.query.effort_gte) filter.effort.$gte = parseInt(req.query.effort_gte, 10);\r\n  console.log(filter);\r\n\r\n  if (req.query._summary === undefined) {\r\n    const offset = req.query._offset ? parseInt(req.query._offset, 10) : 0;\r\n    let limit = req.query.limit ? parseInt(req.query._limit, 10) : 20;\r\n    if (limit > 50) limit = 50;\r\n    \r\n    const cursor = db.collection('issues')\r\n                     .find(filter)\r\n                     .sort({ _id: 1 })\r\n                     .skip(offset)\r\n                     .limit(limit);\r\n    \r\n    let totalCount;\r\n    cursor.count(false).then(result => {\r\n      totalCount = result;\r\n      return cursor.toArray();\r\n    })\r\n    .then((issues) => {\r\n        console.log(issues.length + ' issues retrieved.')\r\n        res.json({ metadata: {totalCount}, records: issues });\r\n    }).catch((error) => {\r\n      console.log(error);\r\n      res.status(500).json({ message: `Internal Server Error: ${error}`});\r\n    });\r\n  } else {\r\n    db.collection('issues')\r\n      .aggregate([\r\n        { $match: filter },\r\n        { $group: { _id: { owner: '$owner', status: '$status' }, count: { $sum: 1 }}}\r\n      ])\r\n      .toArray()\r\n      .then(results => {\r\n        const stats = {};\r\n        results.forEach(result => {\r\n          if (!stats[result._id.owner]) stats[result._id.owner] = {};\r\n          stats[result._id.owner][result._id.status] = result.count;\r\n        });\r\n        res.json(stats);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        res.status(500).json({ message: `Internal Server Error: ${error}` });\r\n      });\r\n  }\r\n});\r\n\r\napp.post('/api/issues', (req, res) => {\r\n  console.log(req.method + ': ' + req.url + ', ' + req.headers['user-agent']);\r\n\r\n  const newIssue = req.body;\r\n  newIssue.created = new Date();\r\n  if(!newIssue.status) {\r\n    newIssue.status = 'New';\r\n  }\r\n\r\n  const err = Issue.validateIssue(newIssue);\r\n  if(err) {\r\n    console.log(err);\r\n    res.status(422).json({ message: `Invalid request: ${err}` });\r\n    return;\r\n  }\r\n\r\n  db.collection('issues').insertOne(Issue.cleanupIssue(newIssue)).then(result => \r\n        db.collection('issues').find({ _id: result.insertedId }).limit(1).next()\r\n    ).then((newIssue) => {\r\n      console.log('Posted new issue: ' + newIssue.title);\r\n      res.json(newIssue);\r\n    }).catch((error) => {\r\n      console.log(error);\r\n      res.status(500).json({ message: 'Internal Server Error: $(error)' });\r\n    });\r\n});\r\n\r\napp.get('/api/issues/:id', (req, res) => {\r\n  let issueId;\r\n  try {\r\n    console.log(\"try: \", req.params.id);\r\n    issueId = new ObjectId(req.params.id);\r\n    console.log(issueId);\r\n  } catch (error) {\r\n    console.log(req.params.id);\r\n    console.log(issueId);\r\n    res.status(422).json({ message: `Invalid issue ID format: ${error}` });\r\n    return;\r\n  }\r\n\r\n  db.collection('issues').find({ _id: issueId }).limit(1)\r\n    .next()\r\n    .then(issue => {\r\n      if(!issue) res.status(404).json({ message: `No such issue: ${issueId}` });\r\n      else res.json(issue);\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n      res.status(500).json({ message: `Internal Server Error: ${error}` });\r\n    });\r\n});\r\n\r\napp.put('/api/issues/:id', (req, res) => {\r\n  let issueId;\r\n  try {\r\n    issueId = new ObjectId(req.params.id);\r\n  } catch(error) {\r\n    res.status(422).json({message: `Invalid issue ID format: ${error}`});\r\n    return;\r\n  }\r\n\r\n  const issue = req.body;\r\n  delete issue._id;\r\n\r\n  const err = Issue.validateIssue(issue);\r\n  if (err) {\r\n    res.status(422).json({ message: `Invalid request: ${err}` });\r\n    return;\r\n  }\r\n\r\n  db.collection('issues').update({ _id: issueId }, Issue.convertIssue(issue))\r\n    .then(() => db.collection('issues').find({ _id: issueId }).limit(1)\r\n    .next()\r\n  )\r\n  .then(savedIssue => {\r\n    res.json(savedIssue);\r\n  }).catch( error => {\r\n    console.log(error);\r\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\r\n  });\r\n});\r\n\r\napp.delete('/api/issues/:id', (req, res) => {\r\n  let issueId;\r\n  try {\r\n    issueId = new ObjectId(req.params.id);\r\n  } catch (error) {\r\n    res.status(422).json({ message: `Invalid issue ID format: ${error}` });\r\n    return;\r\n  }\r\n\r\n  db.collection('issues').deleteOne({ _id: issueId }).then((deleteResult) => {\r\n    if(deleteResult.result.n === 1 ) res.json({ status: 'OK' });\r\n    else res.json({ status: 'Warning: object not found'});\r\n  })\r\n  .catch(error => {\r\n    console.log(error);\r\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\r\n  });\r\n});\r\n\r\napp.get('*', (req, res) => {\r\n  res.sendFile(path.resolve('static/index.html'));\r\n});\r\n\r\nconsole.log('About to attempt starting!');\r\n\r\n// Connect to database and start server\r\nMongoClient.connect('mongodb://localhost:27017/issuetracker').then((connection) => {\r\n  db = connection;\r\n  app.listen(3000, function() {\r\n    console.log('Yay! App started on port 3000');\r\n  }); \r\n}).catch((error) => {\r\n  console.log('ERROR: ', error);\r\n});\r\n"]}