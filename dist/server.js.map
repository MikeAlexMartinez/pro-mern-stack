{"version":3,"sources":["../server/server.js"],"names":["install","app","use","static","json","db","enable","get","req","res","console","log","method","url","headers","filter","query","status","efort_lte","effort_gte","effort","effort_lte","$lte","parseInt","$gte","collection","find","toArray","then","issues","length","metadata","total_count","_metadata","records","catch","error","message","post","newIssue","body","created","Date","err","validateIssue","insertOne","cleanupIssue","result","_id","insertedId","limit","next","title","sendFile","resolve","connect","connection","listen"],"mappings":"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","file":"server.js","sourcesContent":["import 'babel-polyfill';\r\n\r\nimport SourceMapSupport from 'source-map-support';\r\n\r\nimport express from 'express';\r\nimport bodyParser from 'body-parser';\r\nimport { MongoClient } from 'mongodb';\r\nimport path from 'path';\r\n\r\nimport Issue from './issue.js';\r\n\r\nSourceMapSupport.install();\r\nconst app = express();\r\n/* Initialises express to use static middleware in the site */\r\napp.use(express.static('static'));\r\n/* enable body parsing */\r\napp.use(bodyParser.json());\r\n\r\n// define db in global scope.\r\nlet db;\r\n\r\n/* enable strong etags */\r\napp.enable('etag');\r\n\r\napp.get('/api/issues', (req, res) => {\r\n  console.log(req.method + ' (Updated): ' + req.url + ', ' + req.headers['user-agent']);\r\n  const filter = {};\r\n  if (req.query.status) filter.status = req.query.status;\r\n  if (req.query.efort_lte || req.query.effort_gte) filter.effort = {};\r\n  if (req.query.effort_lte) filter.effort.$lte = parseInt(req.query.effort_lte, 10);\r\n  if (req.query.effort_gte) filter.effort.$gte = parseInt(req.query.effort_gte, 10);\r\n\r\n  db.collection('issues').find(filter).toArray().then((issues) => {\r\n    console.log(issues.length + ' issues retrieved.')\r\n    const metadata = {total_count: issues.length};\r\n    res.json({ _metadata: metadata, records: issues});\r\n  }).catch((error) => {\r\n    console.log(error);\r\n    res.status(500).json({ message: `Internal Server Error: ${error}`});\r\n  });\r\n});\r\n\r\napp.post('/api/issues', (req, res) => {\r\n  console.log(req.method + ': ' + req.url + ', ' + req.headers['user-agent']);\r\n\r\n  const newIssue = req.body;\r\n  newIssue.created = new Date();\r\n  if(!newIssue.status) {\r\n    newIssue.status = 'New';\r\n  }\r\n\r\n  const err = Issue.validateIssue(newIssue);\r\n  if(err) {\r\n    console.log(err);\r\n    res.status(422).json({ message: `Invalid request: ${err}` });\r\n    return;\r\n  }\r\n\r\n  db.collection('issues').insertOne(Issue.cleanupIssue(newIssue)).then(result => \r\n        db.collection('issues').find({ _id: result.insertedId }).limit(1).next()\r\n    ).then((newIssue) => {\r\n      console.log('Posted new issue: ' + newIssue.title);\r\n      res.json(newIssue);\r\n    }).catch((error) => {\r\n      console.log(error);\r\n      res.status(500).json({ message: 'Internal Server Error: $(error)' });\r\n    });\r\n});\r\n\r\napp.get('*', (req, res) => {\r\n  res.sendFile(path.resolve('static/index.html'));\r\n});\r\n\r\nconsole.log('About to attempt starting!');\r\n\r\n// Connect to database and start server\r\nMongoClient.connect('mongodb://localhost:27017/issuetracker').then((connection) => {\r\n  db = connection;\r\n  app.listen(3000, function() {\r\n    console.log('Yay! App started on port 3000');\r\n  }); \r\n}).catch((error) => {\r\n  console.log('ERROR: ', error);\r\n});\r\n"]}